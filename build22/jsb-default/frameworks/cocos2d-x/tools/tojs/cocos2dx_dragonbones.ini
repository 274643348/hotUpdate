[cocos2dx_dragonbones]
prefix = cocos2dx_dragonbones

target_namespace = dragonBones

android_headers = -I%(androidndkdir)s/platforms/android-14/arch-arm/usr/include -I%(androidndkdir)s/sources/cxx-stl/gnu-libstdc++/4.8/libs/armeabi-v7a/include -I%(androidndkdir)s/sources/cxx-stl/gnu-libstdc++/4.8/include -I%(androidndkdir)s/sources/cxx-stl/gnu-libstdc++/4.9/libs/armeabi-v7a/include -I%(androidndkdir)s/sources/cxx-stl/gnu-libstdc++/4.9/include
android_flags = -D_SIZE_T_DEFINED_ 

clang_headers = -I%(clangllvmdir)s/%(clang_include)s 
clang_flags = -nostdinc -x c++ -std=c++11 -U __SSE__ -DNO_JS_ASSERT -DUINT32_MAX=0xffffffff

cocos_headers = -I%(cocosdir)s/cocos -I%(cocosdir)s/cocos/editor-support -I%(cocosdir)s/cocos/platform/android -I%(cocosdir)s/external/android/include -I%(cocosdir)s/external/sources -I%(cocosdir)s/external/android/armeabi-v7a/include  -I%(cocosdir)s/external/android/armeabi-v7a/include/spidermonkey

cocos_flags = -DANDROID

cxxgenerator_headers = 

# extra arguments for clang
extra_arguments = %(android_headers)s %(clang_headers)s %(cxxgenerator_headers)s %(cocos_headers)s %(android_flags)s %(clang_flags)s %(cocos_flags)s %(extra_flags)s 

headers = %(cocosdir)s/cocos/editor-support/dragonbones/cocos2dx/CCDragonBonesHeaders.h 

classes = BoneTimelineData DragonBonesData CCFactory CCArmatureDisplay Armature CCSlot WorldClock Animation Slot BaseFactory BaseObject TextureData CCTextureData TextureAtlasData CCTextureAtlasData AnimationState EventObject Bone Transform Matrix TransformObject ArmatureData BoneData SlotData SkinData AnimationData DBCCSprite

abstract_classes = DragonBonesData Armature CCSlot WorldClock Animation Slot BaseFactory BaseObject TextureData CCTextureData TextureAtlasData CCTextureAtlasData AnimationState EventObject Bone Transform Matrix TransformObject ArmatureData BoneData SlotData SkinData AnimationData

skip = CCFactory::[loadDragonBonesData loadTextureAtlasData],
       BaseFactory::[parseTextureAtlasData replaceSlotDisplayList getTextureAtlasData copyAnimationsToArmature replaceSlotDisplay],
       Armature::[_addSlotToSlotList _removeBoneFromBoneList _bufferEvent _addBoneToBoneList _removeSlotFromSlotList getArmatureData getAnimation getBones getSlots getDisplay],
       Bone::[_setIK _update getBones getSlots],
       Animation::[_advanceTime _updateFFDTimelineStates _setArmature _setParent setAnimations getAnimations],
       Slot::[getDisplay$ getRawDisplay getMeshDisplay setDisplay$ _setArmature _update _updateBlendMode _updateMeshData _setBlendMode _updateVisible _setDisplayIndex setDisplayList getDisplayList _setColor _setDisplayList],
       CCArmatureDisplay::[_onClear _dispatchEvent getAnimation],
       AnimationState::[getAnimationData _isDisabled _fadeIn _updateTimelineStates _updateFFDTimelineStates _advanceTime],
       CCSlot::[_onClear],
       Transform::[operator= fromMatrix add identity minus toMatrix],
       Matrix::[operator= identity concat invert transformPoint],
       WorldClock::[add remove],
       ArmatureData::[cacheFrames addBone addSlot addSkin addAnimation getSortedBones getSortedSlots],
       AnimationData::[cacheFrames addBoneTimeline addSlotTimeline addFFDTimeline getBontTimeline getSlotTimeline getFFDTimeline getBoneTimeline],
       SkinData::[addSlot getSlot],
       DBCCSprite::[getPolygonInfoModify draw],
       BaseObject::[setObjectRecycleOrDestroyCallback isInPool getAllObjects],
       BoneTimelineData::[*],
       SlotData::[generateColor],
       TextureData::[generateRectangle]

field = TransformObject::[name globalTransformMatrix],
        Transform::[x y skewX skewY scaleX scaleY],
        Slot::[displayController inheritAnimation],
        Matrix::[a b c d tx ty],
        EventObject::[animationState armature name type bone slot],
        AnimationState::[timeScale displayControl additiveBlending playTimes weight autoFadeOutTime fadeTotalTime],
        Animation::[timeScale],
        ArmatureData::[frameRate name],
        AnimationData::[name frameCount playTimes position duration fadeInTime],
        BoneData::[name parent],
        SlotData::[name parent],
        SkinData::[name],
        DragonBonesData::[name]

remove_prefix = 

classes_have_no_parents = WorldClock Slot AnimationData

base_classes_to_skip = IAnimateble IArmatureDisplay

rename_functions = CCArmatureDisplay::[getArmature=armature addEvent=addEventListener removeEvent=removeEventListener]

rename_classes =

classes_owned_by_cpp = DragonBonesData Armature CCSlot WorldClock Animation Slot BaseFactory BaseObject TextureData CCTextureData TextureAtlasData CCTextureAtlasData AnimationState EventObject Bone Transform Matrix TransformObject ArmatureData BoneData SlotData SkinData AnimationData
