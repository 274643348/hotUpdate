#pragma once
#include "base/ccConfig.h"

#include "cocos/scripting/js-bindings/jswrapper/SeApi.h"

extern se::Object* __jsb_b2Draw_proto;
extern se::Class* __jsb_b2Draw_class;

bool js_register_b2Draw(se::Object* obj);
bool register_all_box2dclasses(se::Object* obj);
SE_DECLARE_FUNC(js_box2dclasses_b2Draw_AppendFlags);
SE_DECLARE_FUNC(js_box2dclasses_b2Draw_DrawTransform);
SE_DECLARE_FUNC(js_box2dclasses_b2Draw_ClearFlags);
SE_DECLARE_FUNC(js_box2dclasses_b2Draw_DrawPolygon);
SE_DECLARE_FUNC(js_box2dclasses_b2Draw_ClearDraw);
SE_DECLARE_FUNC(js_box2dclasses_b2Draw_DrawSolidPolygon);
SE_DECLARE_FUNC(js_box2dclasses_b2Draw_DrawCircle);
SE_DECLARE_FUNC(js_box2dclasses_b2Draw_SetFlags);
SE_DECLARE_FUNC(js_box2dclasses_b2Draw_DrawSegment);
SE_DECLARE_FUNC(js_box2dclasses_b2Draw_DrawSolidCircle);
SE_DECLARE_FUNC(js_box2dclasses_b2Draw_GetFlags);

extern se::Object* __jsb_b2Shape_proto;
extern se::Class* __jsb_b2Shape_class;

bool js_register_b2Shape(se::Object* obj);
bool register_all_box2dclasses(se::Object* obj);
SE_DECLARE_FUNC(js_box2dclasses_b2Shape_ComputeMass);
SE_DECLARE_FUNC(js_box2dclasses_b2Shape_Clone);
SE_DECLARE_FUNC(js_box2dclasses_b2Shape_GetType);
SE_DECLARE_FUNC(js_box2dclasses_b2Shape_RayCast);
SE_DECLARE_FUNC(js_box2dclasses_b2Shape_ComputeAABB);
SE_DECLARE_FUNC(js_box2dclasses_b2Shape_GetChildCount);
SE_DECLARE_FUNC(js_box2dclasses_b2Shape_TestPoint);

extern se::Object* __jsb_b2CircleShape_proto;
extern se::Class* __jsb_b2CircleShape_class;

bool js_register_b2CircleShape(se::Object* obj);
bool register_all_box2dclasses(se::Object* obj);
SE_DECLARE_FUNC(js_box2dclasses_b2CircleShape_ComputeMass);
SE_DECLARE_FUNC(js_box2dclasses_b2CircleShape_GetVertex);
SE_DECLARE_FUNC(js_box2dclasses_b2CircleShape_Clone);
SE_DECLARE_FUNC(js_box2dclasses_b2CircleShape_RayCast);
SE_DECLARE_FUNC(js_box2dclasses_b2CircleShape_ComputeAABB);
SE_DECLARE_FUNC(js_box2dclasses_b2CircleShape_GetVertexCount);
SE_DECLARE_FUNC(js_box2dclasses_b2CircleShape_GetChildCount);
SE_DECLARE_FUNC(js_box2dclasses_b2CircleShape_TestPoint);
SE_DECLARE_FUNC(js_box2dclasses_b2CircleShape_GetSupportVertex);
SE_DECLARE_FUNC(js_box2dclasses_b2CircleShape_GetSupport);
SE_DECLARE_FUNC(js_box2dclasses_b2CircleShape_b2CircleShape);

extern se::Object* __jsb_b2EdgeShape_proto;
extern se::Class* __jsb_b2EdgeShape_class;

bool js_register_b2EdgeShape(se::Object* obj);
bool register_all_box2dclasses(se::Object* obj);
SE_DECLARE_FUNC(js_box2dclasses_b2EdgeShape_Set);
SE_DECLARE_FUNC(js_box2dclasses_b2EdgeShape_ComputeMass);
SE_DECLARE_FUNC(js_box2dclasses_b2EdgeShape_Clone);
SE_DECLARE_FUNC(js_box2dclasses_b2EdgeShape_RayCast);
SE_DECLARE_FUNC(js_box2dclasses_b2EdgeShape_ComputeAABB);
SE_DECLARE_FUNC(js_box2dclasses_b2EdgeShape_GetChildCount);
SE_DECLARE_FUNC(js_box2dclasses_b2EdgeShape_TestPoint);
SE_DECLARE_FUNC(js_box2dclasses_b2EdgeShape_b2EdgeShape);

extern se::Object* __jsb_b2ChainShape_proto;
extern se::Class* __jsb_b2ChainShape_class;

bool js_register_b2ChainShape(se::Object* obj);
bool register_all_box2dclasses(se::Object* obj);
SE_DECLARE_FUNC(js_box2dclasses_b2ChainShape_ComputeMass);
SE_DECLARE_FUNC(js_box2dclasses_b2ChainShape_Clear);
SE_DECLARE_FUNC(js_box2dclasses_b2ChainShape_TestPoint);
SE_DECLARE_FUNC(js_box2dclasses_b2ChainShape_GetChildEdge);
SE_DECLARE_FUNC(js_box2dclasses_b2ChainShape_RayCast);
SE_DECLARE_FUNC(js_box2dclasses_b2ChainShape_ComputeAABB);
SE_DECLARE_FUNC(js_box2dclasses_b2ChainShape_GetChildCount);
SE_DECLARE_FUNC(js_box2dclasses_b2ChainShape_SetPrevVertex);
SE_DECLARE_FUNC(js_box2dclasses_b2ChainShape_SetNextVertex);
SE_DECLARE_FUNC(js_box2dclasses_b2ChainShape_Clone);
SE_DECLARE_FUNC(js_box2dclasses_b2ChainShape_b2ChainShape);

extern se::Object* __jsb_b2PolygonShape_proto;
extern se::Class* __jsb_b2PolygonShape_class;

bool js_register_b2PolygonShape(se::Object* obj);
bool register_all_box2dclasses(se::Object* obj);
SE_DECLARE_FUNC(js_box2dclasses_b2PolygonShape_ComputeMass);
SE_DECLARE_FUNC(js_box2dclasses_b2PolygonShape_GetVertex);
SE_DECLARE_FUNC(js_box2dclasses_b2PolygonShape_Clone);
SE_DECLARE_FUNC(js_box2dclasses_b2PolygonShape_RayCast);
SE_DECLARE_FUNC(js_box2dclasses_b2PolygonShape_ComputeAABB);
SE_DECLARE_FUNC(js_box2dclasses_b2PolygonShape_GetVertexCount);
SE_DECLARE_FUNC(js_box2dclasses_b2PolygonShape_GetChildCount);
SE_DECLARE_FUNC(js_box2dclasses_b2PolygonShape_TestPoint);
SE_DECLARE_FUNC(js_box2dclasses_b2PolygonShape_Validate);
SE_DECLARE_FUNC(js_box2dclasses_b2PolygonShape_b2PolygonShape);

extern se::Object* __jsb_b2Body_proto;
extern se::Class* __jsb_b2Body_class;

bool js_register_b2Body(se::Object* obj);
bool register_all_box2dclasses(se::Object* obj);
SE_DECLARE_FUNC(js_box2dclasses_b2Body_GetAngle);
SE_DECLARE_FUNC(js_box2dclasses_b2Body_IsSleepingAllowed);
SE_DECLARE_FUNC(js_box2dclasses_b2Body_SetAngularDamping);
SE_DECLARE_FUNC(js_box2dclasses_b2Body_SetActive);
SE_DECLARE_FUNC(js_box2dclasses_b2Body_SetGravityScale);
SE_DECLARE_FUNC(js_box2dclasses_b2Body_GetAngularVelocity);
SE_DECLARE_FUNC(js_box2dclasses_b2Body_GetFixtureList);
SE_DECLARE_FUNC(js_box2dclasses_b2Body_ApplyForce);
SE_DECLARE_FUNC(js_box2dclasses_b2Body_GetLocalPoint);
SE_DECLARE_FUNC(js_box2dclasses_b2Body_SetLinearVelocity);
SE_DECLARE_FUNC(js_box2dclasses_b2Body_GetLinearVelocity);
SE_DECLARE_FUNC(js_box2dclasses_b2Body_GetNext);
SE_DECLARE_FUNC(js_box2dclasses_b2Body_SetSleepingAllowed);
SE_DECLARE_FUNC(js_box2dclasses_b2Body_SetTransform);
SE_DECLARE_FUNC(js_box2dclasses_b2Body_GetMass);
SE_DECLARE_FUNC(js_box2dclasses_b2Body_SetAngularVelocity);
SE_DECLARE_FUNC(js_box2dclasses_b2Body_GetMassData);
SE_DECLARE_FUNC(js_box2dclasses_b2Body_GetLinearVelocityFromWorldPoint);
SE_DECLARE_FUNC(js_box2dclasses_b2Body_ResetMassData);
SE_DECLARE_FUNC(js_box2dclasses_b2Body_ApplyForceToCenter);
SE_DECLARE_FUNC(js_box2dclasses_b2Body_ApplyTorque);
SE_DECLARE_FUNC(js_box2dclasses_b2Body_IsAwake);
SE_DECLARE_FUNC(js_box2dclasses_b2Body_SetType);
SE_DECLARE_FUNC(js_box2dclasses_b2Body_SetMassData);
SE_DECLARE_FUNC(js_box2dclasses_b2Body_GetTransform);
SE_DECLARE_FUNC(js_box2dclasses_b2Body_GetWorldCenter);
SE_DECLARE_FUNC(js_box2dclasses_b2Body_GetAngularDamping);
SE_DECLARE_FUNC(js_box2dclasses_b2Body_ApplyLinearImpulse);
SE_DECLARE_FUNC(js_box2dclasses_b2Body_IsFixedRotation);
SE_DECLARE_FUNC(js_box2dclasses_b2Body_GetLocalCenter);
SE_DECLARE_FUNC(js_box2dclasses_b2Body_GetWorldVector);
SE_DECLARE_FUNC(js_box2dclasses_b2Body_GetLinearVelocityFromLocalPoint);
SE_DECLARE_FUNC(js_box2dclasses_b2Body_GetContactList);
SE_DECLARE_FUNC(js_box2dclasses_b2Body_GetWorldPoint);
SE_DECLARE_FUNC(js_box2dclasses_b2Body_SetAwake);
SE_DECLARE_FUNC(js_box2dclasses_b2Body_GetLinearDamping);
SE_DECLARE_FUNC(js_box2dclasses_b2Body_IsBullet);
SE_DECLARE_FUNC(js_box2dclasses_b2Body_GetWorld);
SE_DECLARE_FUNC(js_box2dclasses_b2Body_GetLocalVector);
SE_DECLARE_FUNC(js_box2dclasses_b2Body_SetLinearDamping);
SE_DECLARE_FUNC(js_box2dclasses_b2Body_Dump);
SE_DECLARE_FUNC(js_box2dclasses_b2Body_SetBullet);
SE_DECLARE_FUNC(js_box2dclasses_b2Body_GetType);
SE_DECLARE_FUNC(js_box2dclasses_b2Body_GetGravityScale);
SE_DECLARE_FUNC(js_box2dclasses_b2Body_DestroyFixture);
SE_DECLARE_FUNC(js_box2dclasses_b2Body_GetInertia);
SE_DECLARE_FUNC(js_box2dclasses_b2Body_IsActive);
SE_DECLARE_FUNC(js_box2dclasses_b2Body_SetFixedRotation);
SE_DECLARE_FUNC(js_box2dclasses_b2Body_ApplyAngularImpulse);
SE_DECLARE_FUNC(js_box2dclasses_b2Body_GetPosition);

extern se::Object* __jsb_b2Fixture_proto;
extern se::Class* __jsb_b2Fixture_class;

bool js_register_b2Fixture(se::Object* obj);
bool register_all_box2dclasses(se::Object* obj);
SE_DECLARE_FUNC(js_box2dclasses_b2Fixture_GetRestitution);
SE_DECLARE_FUNC(js_box2dclasses_b2Fixture_SetFilterData);
SE_DECLARE_FUNC(js_box2dclasses_b2Fixture_SetFriction);
SE_DECLARE_FUNC(js_box2dclasses_b2Fixture_GetShape);
SE_DECLARE_FUNC(js_box2dclasses_b2Fixture_SetRestitution);
SE_DECLARE_FUNC(js_box2dclasses_b2Fixture_GetBody);
SE_DECLARE_FUNC(js_box2dclasses_b2Fixture_GetNext);
SE_DECLARE_FUNC(js_box2dclasses_b2Fixture_GetFriction);
SE_DECLARE_FUNC(js_box2dclasses_b2Fixture_SetDensity);
SE_DECLARE_FUNC(js_box2dclasses_b2Fixture_GetMassData);
SE_DECLARE_FUNC(js_box2dclasses_b2Fixture_SetSensor);
SE_DECLARE_FUNC(js_box2dclasses_b2Fixture_GetAABB);
SE_DECLARE_FUNC(js_box2dclasses_b2Fixture_TestPoint);
SE_DECLARE_FUNC(js_box2dclasses_b2Fixture_RayCast);
SE_DECLARE_FUNC(js_box2dclasses_b2Fixture_Refilter);
SE_DECLARE_FUNC(js_box2dclasses_b2Fixture_Dump);
SE_DECLARE_FUNC(js_box2dclasses_b2Fixture_GetFilterData);
SE_DECLARE_FUNC(js_box2dclasses_b2Fixture_IsSensor);
SE_DECLARE_FUNC(js_box2dclasses_b2Fixture_GetType);
SE_DECLARE_FUNC(js_box2dclasses_b2Fixture_GetDensity);

extern se::Object* __jsb_b2ContactListener_proto;
extern se::Class* __jsb_b2ContactListener_class;

bool js_register_b2ContactListener(se::Object* obj);
bool register_all_box2dclasses(se::Object* obj);
SE_DECLARE_FUNC(js_box2dclasses_b2ContactListener_EndContact);
SE_DECLARE_FUNC(js_box2dclasses_b2ContactListener_PreSolve);
SE_DECLARE_FUNC(js_box2dclasses_b2ContactListener_BeginContact);
SE_DECLARE_FUNC(js_box2dclasses_b2ContactListener_PostSolve);

extern se::Object* __jsb_b2QueryCallback_proto;
extern se::Class* __jsb_b2QueryCallback_class;

bool js_register_b2QueryCallback(se::Object* obj);
bool register_all_box2dclasses(se::Object* obj);
SE_DECLARE_FUNC(js_box2dclasses_b2QueryCallback_ReportFixture);

extern se::Object* __jsb_b2RayCastCallback_proto;
extern se::Class* __jsb_b2RayCastCallback_class;

bool js_register_b2RayCastCallback(se::Object* obj);
bool register_all_box2dclasses(se::Object* obj);
SE_DECLARE_FUNC(js_box2dclasses_b2RayCastCallback_ReportFixture);

extern se::Object* __jsb_b2World_proto;
extern se::Class* __jsb_b2World_class;

bool js_register_b2World(se::Object* obj);
bool register_all_box2dclasses(se::Object* obj);
SE_DECLARE_FUNC(js_box2dclasses_b2World_ShiftOrigin);
SE_DECLARE_FUNC(js_box2dclasses_b2World_QueryAABB);
SE_DECLARE_FUNC(js_box2dclasses_b2World_SetSubStepping);
SE_DECLARE_FUNC(js_box2dclasses_b2World_GetTreeQuality);
SE_DECLARE_FUNC(js_box2dclasses_b2World_GetTreeHeight);
SE_DECLARE_FUNC(js_box2dclasses_b2World_GetProfile);
SE_DECLARE_FUNC(js_box2dclasses_b2World_GetTreeBalance);
SE_DECLARE_FUNC(js_box2dclasses_b2World_GetSubStepping);
SE_DECLARE_FUNC(js_box2dclasses_b2World_SetContactListener);
SE_DECLARE_FUNC(js_box2dclasses_b2World_DrawDebugData);
SE_DECLARE_FUNC(js_box2dclasses_b2World_SetContinuousPhysics);
SE_DECLARE_FUNC(js_box2dclasses_b2World_SetGravity);
SE_DECLARE_FUNC(js_box2dclasses_b2World_GetBodyCount);
SE_DECLARE_FUNC(js_box2dclasses_b2World_GetAutoClearForces);
SE_DECLARE_FUNC(js_box2dclasses_b2World_GetContinuousPhysics);
SE_DECLARE_FUNC(js_box2dclasses_b2World_GetJointList);
SE_DECLARE_FUNC(js_box2dclasses_b2World_GetBodyList);
SE_DECLARE_FUNC(js_box2dclasses_b2World_SetDestructionListener);
SE_DECLARE_FUNC(js_box2dclasses_b2World_DestroyJoint);
SE_DECLARE_FUNC(js_box2dclasses_b2World_GetJointCount);
SE_DECLARE_FUNC(js_box2dclasses_b2World_Step);
SE_DECLARE_FUNC(js_box2dclasses_b2World_ClearForces);
SE_DECLARE_FUNC(js_box2dclasses_b2World_GetWarmStarting);
SE_DECLARE_FUNC(js_box2dclasses_b2World_SetAllowSleeping);
SE_DECLARE_FUNC(js_box2dclasses_b2World_DestroyBody);
SE_DECLARE_FUNC(js_box2dclasses_b2World_GetAllowSleeping);
SE_DECLARE_FUNC(js_box2dclasses_b2World_GetProxyCount);
SE_DECLARE_FUNC(js_box2dclasses_b2World_RayCast);
SE_DECLARE_FUNC(js_box2dclasses_b2World_IsLocked);
SE_DECLARE_FUNC(js_box2dclasses_b2World_SetDebugDraw);
SE_DECLARE_FUNC(js_box2dclasses_b2World_Dump);
SE_DECLARE_FUNC(js_box2dclasses_b2World_SetAutoClearForces);
SE_DECLARE_FUNC(js_box2dclasses_b2World_GetGravity);
SE_DECLARE_FUNC(js_box2dclasses_b2World_GetContactCount);
SE_DECLARE_FUNC(js_box2dclasses_b2World_SetWarmStarting);
SE_DECLARE_FUNC(js_box2dclasses_b2World_SetContactFilter);
SE_DECLARE_FUNC(js_box2dclasses_b2World_b2World);

extern se::Object* __jsb_b2Contact_proto;
extern se::Class* __jsb_b2Contact_class;

bool js_register_b2Contact(se::Object* obj);
bool register_all_box2dclasses(se::Object* obj);
SE_DECLARE_FUNC(js_box2dclasses_b2Contact_GetNext);
SE_DECLARE_FUNC(js_box2dclasses_b2Contact_SetEnabled);
SE_DECLARE_FUNC(js_box2dclasses_b2Contact_GetWorldManifold);
SE_DECLARE_FUNC(js_box2dclasses_b2Contact_GetRestitution);
SE_DECLARE_FUNC(js_box2dclasses_b2Contact_ResetFriction);
SE_DECLARE_FUNC(js_box2dclasses_b2Contact_GetFriction);
SE_DECLARE_FUNC(js_box2dclasses_b2Contact_IsTouching);
SE_DECLARE_FUNC(js_box2dclasses_b2Contact_IsEnabled);
SE_DECLARE_FUNC(js_box2dclasses_b2Contact_GetFixtureB);
SE_DECLARE_FUNC(js_box2dclasses_b2Contact_SetFriction);
SE_DECLARE_FUNC(js_box2dclasses_b2Contact_GetFixtureA);
SE_DECLARE_FUNC(js_box2dclasses_b2Contact_GetChildIndexA);
SE_DECLARE_FUNC(js_box2dclasses_b2Contact_GetChildIndexB);
SE_DECLARE_FUNC(js_box2dclasses_b2Contact_SetTangentSpeed);
SE_DECLARE_FUNC(js_box2dclasses_b2Contact_GetTangentSpeed);
SE_DECLARE_FUNC(js_box2dclasses_b2Contact_SetRestitution);
SE_DECLARE_FUNC(js_box2dclasses_b2Contact_GetManifold);
SE_DECLARE_FUNC(js_box2dclasses_b2Contact_Evaluate);
SE_DECLARE_FUNC(js_box2dclasses_b2Contact_ResetRestitution);

extern se::Object* __jsb_b2Joint_proto;
extern se::Class* __jsb_b2Joint_class;

bool js_register_b2Joint(se::Object* obj);
bool register_all_box2dclasses(se::Object* obj);
SE_DECLARE_FUNC(js_box2dclasses_b2Joint_GetNext);
SE_DECLARE_FUNC(js_box2dclasses_b2Joint_GetBodyA);
SE_DECLARE_FUNC(js_box2dclasses_b2Joint_GetBodyB);
SE_DECLARE_FUNC(js_box2dclasses_b2Joint_GetReactionTorque);
SE_DECLARE_FUNC(js_box2dclasses_b2Joint_GetAnchorA);
SE_DECLARE_FUNC(js_box2dclasses_b2Joint_ShiftOrigin);
SE_DECLARE_FUNC(js_box2dclasses_b2Joint_GetType);
SE_DECLARE_FUNC(js_box2dclasses_b2Joint_GetCollideConnected);
SE_DECLARE_FUNC(js_box2dclasses_b2Joint_Dump);
SE_DECLARE_FUNC(js_box2dclasses_b2Joint_GetAnchorB);
SE_DECLARE_FUNC(js_box2dclasses_b2Joint_GetReactionForce);
SE_DECLARE_FUNC(js_box2dclasses_b2Joint_IsActive);

extern se::Object* __jsb_b2DistanceJoint_proto;
extern se::Class* __jsb_b2DistanceJoint_class;

bool js_register_b2DistanceJoint(se::Object* obj);
bool register_all_box2dclasses(se::Object* obj);
SE_DECLARE_FUNC(js_box2dclasses_b2DistanceJoint_SetDampingRatio);
SE_DECLARE_FUNC(js_box2dclasses_b2DistanceJoint_GetAnchorA);
SE_DECLARE_FUNC(js_box2dclasses_b2DistanceJoint_GetReactionTorque);
SE_DECLARE_FUNC(js_box2dclasses_b2DistanceJoint_Dump);
SE_DECLARE_FUNC(js_box2dclasses_b2DistanceJoint_SetFrequency);
SE_DECLARE_FUNC(js_box2dclasses_b2DistanceJoint_GetLength);
SE_DECLARE_FUNC(js_box2dclasses_b2DistanceJoint_GetDampingRatio);
SE_DECLARE_FUNC(js_box2dclasses_b2DistanceJoint_GetFrequency);
SE_DECLARE_FUNC(js_box2dclasses_b2DistanceJoint_GetLocalAnchorA);
SE_DECLARE_FUNC(js_box2dclasses_b2DistanceJoint_GetLocalAnchorB);
SE_DECLARE_FUNC(js_box2dclasses_b2DistanceJoint_GetAnchorB);
SE_DECLARE_FUNC(js_box2dclasses_b2DistanceJoint_GetReactionForce);
SE_DECLARE_FUNC(js_box2dclasses_b2DistanceJoint_SetLength);

extern se::Object* __jsb_b2FrictionJoint_proto;
extern se::Class* __jsb_b2FrictionJoint_class;

bool js_register_b2FrictionJoint(se::Object* obj);
bool register_all_box2dclasses(se::Object* obj);
SE_DECLARE_FUNC(js_box2dclasses_b2FrictionJoint_SetMaxTorque);
SE_DECLARE_FUNC(js_box2dclasses_b2FrictionJoint_GetMaxForce);
SE_DECLARE_FUNC(js_box2dclasses_b2FrictionJoint_GetAnchorA);
SE_DECLARE_FUNC(js_box2dclasses_b2FrictionJoint_GetReactionTorque);
SE_DECLARE_FUNC(js_box2dclasses_b2FrictionJoint_Dump);
SE_DECLARE_FUNC(js_box2dclasses_b2FrictionJoint_SetMaxForce);
SE_DECLARE_FUNC(js_box2dclasses_b2FrictionJoint_GetLocalAnchorA);
SE_DECLARE_FUNC(js_box2dclasses_b2FrictionJoint_GetLocalAnchorB);
SE_DECLARE_FUNC(js_box2dclasses_b2FrictionJoint_GetAnchorB);
SE_DECLARE_FUNC(js_box2dclasses_b2FrictionJoint_GetReactionForce);
SE_DECLARE_FUNC(js_box2dclasses_b2FrictionJoint_GetMaxTorque);

extern se::Object* __jsb_b2GearJoint_proto;
extern se::Class* __jsb_b2GearJoint_class;

bool js_register_b2GearJoint(se::Object* obj);
bool register_all_box2dclasses(se::Object* obj);
SE_DECLARE_FUNC(js_box2dclasses_b2GearJoint_GetJoint1);
SE_DECLARE_FUNC(js_box2dclasses_b2GearJoint_GetAnchorA);
SE_DECLARE_FUNC(js_box2dclasses_b2GearJoint_GetJoint2);
SE_DECLARE_FUNC(js_box2dclasses_b2GearJoint_GetReactionTorque);
SE_DECLARE_FUNC(js_box2dclasses_b2GearJoint_Dump);
SE_DECLARE_FUNC(js_box2dclasses_b2GearJoint_SetRatio);
SE_DECLARE_FUNC(js_box2dclasses_b2GearJoint_GetAnchorB);
SE_DECLARE_FUNC(js_box2dclasses_b2GearJoint_GetReactionForce);
SE_DECLARE_FUNC(js_box2dclasses_b2GearJoint_GetRatio);

extern se::Object* __jsb_b2MotorJoint_proto;
extern se::Class* __jsb_b2MotorJoint_class;

bool js_register_b2MotorJoint(se::Object* obj);
bool register_all_box2dclasses(se::Object* obj);
SE_DECLARE_FUNC(js_box2dclasses_b2MotorJoint_SetMaxTorque);
SE_DECLARE_FUNC(js_box2dclasses_b2MotorJoint_GetAnchorA);
SE_DECLARE_FUNC(js_box2dclasses_b2MotorJoint_GetReactionTorque);
SE_DECLARE_FUNC(js_box2dclasses_b2MotorJoint_GetCorrectionFactor);
SE_DECLARE_FUNC(js_box2dclasses_b2MotorJoint_SetMaxForce);
SE_DECLARE_FUNC(js_box2dclasses_b2MotorJoint_SetLinearOffset);
SE_DECLARE_FUNC(js_box2dclasses_b2MotorJoint_GetMaxForce);
SE_DECLARE_FUNC(js_box2dclasses_b2MotorJoint_Dump);
SE_DECLARE_FUNC(js_box2dclasses_b2MotorJoint_SetAngularOffset);
SE_DECLARE_FUNC(js_box2dclasses_b2MotorJoint_GetAnchorB);
SE_DECLARE_FUNC(js_box2dclasses_b2MotorJoint_GetReactionForce);
SE_DECLARE_FUNC(js_box2dclasses_b2MotorJoint_GetAngularOffset);
SE_DECLARE_FUNC(js_box2dclasses_b2MotorJoint_GetLinearOffset);
SE_DECLARE_FUNC(js_box2dclasses_b2MotorJoint_GetMaxTorque);
SE_DECLARE_FUNC(js_box2dclasses_b2MotorJoint_SetCorrectionFactor);

extern se::Object* __jsb_b2MouseJoint_proto;
extern se::Class* __jsb_b2MouseJoint_class;

bool js_register_b2MouseJoint(se::Object* obj);
bool register_all_box2dclasses(se::Object* obj);
SE_DECLARE_FUNC(js_box2dclasses_b2MouseJoint_SetDampingRatio);
SE_DECLARE_FUNC(js_box2dclasses_b2MouseJoint_GetAnchorA);
SE_DECLARE_FUNC(js_box2dclasses_b2MouseJoint_GetReactionTorque);
SE_DECLARE_FUNC(js_box2dclasses_b2MouseJoint_Dump);
SE_DECLARE_FUNC(js_box2dclasses_b2MouseJoint_SetFrequency);
SE_DECLARE_FUNC(js_box2dclasses_b2MouseJoint_GetDampingRatio);
SE_DECLARE_FUNC(js_box2dclasses_b2MouseJoint_SetTarget);
SE_DECLARE_FUNC(js_box2dclasses_b2MouseJoint_SetMaxForce);
SE_DECLARE_FUNC(js_box2dclasses_b2MouseJoint_GetFrequency);
SE_DECLARE_FUNC(js_box2dclasses_b2MouseJoint_GetTarget);
SE_DECLARE_FUNC(js_box2dclasses_b2MouseJoint_GetMaxForce);
SE_DECLARE_FUNC(js_box2dclasses_b2MouseJoint_GetAnchorB);
SE_DECLARE_FUNC(js_box2dclasses_b2MouseJoint_GetReactionForce);
SE_DECLARE_FUNC(js_box2dclasses_b2MouseJoint_ShiftOrigin);

extern se::Object* __jsb_b2PrismaticJoint_proto;
extern se::Class* __jsb_b2PrismaticJoint_class;

bool js_register_b2PrismaticJoint(se::Object* obj);
bool register_all_box2dclasses(se::Object* obj);
SE_DECLARE_FUNC(js_box2dclasses_b2PrismaticJoint_GetLocalAxisA);
SE_DECLARE_FUNC(js_box2dclasses_b2PrismaticJoint_GetLowerLimit);
SE_DECLARE_FUNC(js_box2dclasses_b2PrismaticJoint_GetAnchorA);
SE_DECLARE_FUNC(js_box2dclasses_b2PrismaticJoint_GetLocalAnchorA);
SE_DECLARE_FUNC(js_box2dclasses_b2PrismaticJoint_SetMotorSpeed);
SE_DECLARE_FUNC(js_box2dclasses_b2PrismaticJoint_GetLocalAnchorB);
SE_DECLARE_FUNC(js_box2dclasses_b2PrismaticJoint_GetMotorSpeed);
SE_DECLARE_FUNC(js_box2dclasses_b2PrismaticJoint_SetMaxMotorForce);
SE_DECLARE_FUNC(js_box2dclasses_b2PrismaticJoint_EnableLimit);
SE_DECLARE_FUNC(js_box2dclasses_b2PrismaticJoint_IsMotorEnabled);
SE_DECLARE_FUNC(js_box2dclasses_b2PrismaticJoint_GetReactionForce);
SE_DECLARE_FUNC(js_box2dclasses_b2PrismaticJoint_GetMaxMotorForce);
SE_DECLARE_FUNC(js_box2dclasses_b2PrismaticJoint_GetJointSpeed);
SE_DECLARE_FUNC(js_box2dclasses_b2PrismaticJoint_EnableMotor);
SE_DECLARE_FUNC(js_box2dclasses_b2PrismaticJoint_GetReferenceAngle);
SE_DECLARE_FUNC(js_box2dclasses_b2PrismaticJoint_Dump);
SE_DECLARE_FUNC(js_box2dclasses_b2PrismaticJoint_GetMotorForce);
SE_DECLARE_FUNC(js_box2dclasses_b2PrismaticJoint_GetJointTranslation);
SE_DECLARE_FUNC(js_box2dclasses_b2PrismaticJoint_IsLimitEnabled);
SE_DECLARE_FUNC(js_box2dclasses_b2PrismaticJoint_GetReactionTorque);
SE_DECLARE_FUNC(js_box2dclasses_b2PrismaticJoint_SetLimits);
SE_DECLARE_FUNC(js_box2dclasses_b2PrismaticJoint_GetUpperLimit);
SE_DECLARE_FUNC(js_box2dclasses_b2PrismaticJoint_GetAnchorB);

extern se::Object* __jsb_b2PulleyJoint_proto;
extern se::Class* __jsb_b2PulleyJoint_class;

bool js_register_b2PulleyJoint(se::Object* obj);
bool register_all_box2dclasses(se::Object* obj);
SE_DECLARE_FUNC(js_box2dclasses_b2PulleyJoint_GetCurrentLengthA);
SE_DECLARE_FUNC(js_box2dclasses_b2PulleyJoint_GetAnchorA);
SE_DECLARE_FUNC(js_box2dclasses_b2PulleyJoint_GetGroundAnchorB);
SE_DECLARE_FUNC(js_box2dclasses_b2PulleyJoint_GetReactionTorque);
SE_DECLARE_FUNC(js_box2dclasses_b2PulleyJoint_Dump);
SE_DECLARE_FUNC(js_box2dclasses_b2PulleyJoint_GetGroundAnchorA);
SE_DECLARE_FUNC(js_box2dclasses_b2PulleyJoint_GetLengthB);
SE_DECLARE_FUNC(js_box2dclasses_b2PulleyJoint_GetLengthA);
SE_DECLARE_FUNC(js_box2dclasses_b2PulleyJoint_GetCurrentLengthB);
SE_DECLARE_FUNC(js_box2dclasses_b2PulleyJoint_GetAnchorB);
SE_DECLARE_FUNC(js_box2dclasses_b2PulleyJoint_GetReactionForce);
SE_DECLARE_FUNC(js_box2dclasses_b2PulleyJoint_ShiftOrigin);
SE_DECLARE_FUNC(js_box2dclasses_b2PulleyJoint_GetRatio);

extern se::Object* __jsb_b2RevoluteJoint_proto;
extern se::Class* __jsb_b2RevoluteJoint_class;

bool js_register_b2RevoluteJoint(se::Object* obj);
bool register_all_box2dclasses(se::Object* obj);
SE_DECLARE_FUNC(js_box2dclasses_b2RevoluteJoint_GetLowerLimit);
SE_DECLARE_FUNC(js_box2dclasses_b2RevoluteJoint_GetAnchorA);
SE_DECLARE_FUNC(js_box2dclasses_b2RevoluteJoint_GetLocalAnchorA);
SE_DECLARE_FUNC(js_box2dclasses_b2RevoluteJoint_SetMotorSpeed);
SE_DECLARE_FUNC(js_box2dclasses_b2RevoluteJoint_GetLocalAnchorB);
SE_DECLARE_FUNC(js_box2dclasses_b2RevoluteJoint_GetJointAngle);
SE_DECLARE_FUNC(js_box2dclasses_b2RevoluteJoint_GetMotorSpeed);
SE_DECLARE_FUNC(js_box2dclasses_b2RevoluteJoint_GetMotorTorque);
SE_DECLARE_FUNC(js_box2dclasses_b2RevoluteJoint_IsLimitEnabled);
SE_DECLARE_FUNC(js_box2dclasses_b2RevoluteJoint_EnableLimit);
SE_DECLARE_FUNC(js_box2dclasses_b2RevoluteJoint_IsMotorEnabled);
SE_DECLARE_FUNC(js_box2dclasses_b2RevoluteJoint_GetReactionForce);
SE_DECLARE_FUNC(js_box2dclasses_b2RevoluteJoint_SetMaxMotorTorque);
SE_DECLARE_FUNC(js_box2dclasses_b2RevoluteJoint_GetJointSpeed);
SE_DECLARE_FUNC(js_box2dclasses_b2RevoluteJoint_EnableMotor);
SE_DECLARE_FUNC(js_box2dclasses_b2RevoluteJoint_GetReferenceAngle);
SE_DECLARE_FUNC(js_box2dclasses_b2RevoluteJoint_Dump);
SE_DECLARE_FUNC(js_box2dclasses_b2RevoluteJoint_SetLimits);
SE_DECLARE_FUNC(js_box2dclasses_b2RevoluteJoint_GetMaxMotorTorque);
SE_DECLARE_FUNC(js_box2dclasses_b2RevoluteJoint_GetReactionTorque);
SE_DECLARE_FUNC(js_box2dclasses_b2RevoluteJoint_GetUpperLimit);
SE_DECLARE_FUNC(js_box2dclasses_b2RevoluteJoint_GetAnchorB);

extern se::Object* __jsb_b2RopeJoint_proto;
extern se::Class* __jsb_b2RopeJoint_class;

bool js_register_b2RopeJoint(se::Object* obj);
bool register_all_box2dclasses(se::Object* obj);
SE_DECLARE_FUNC(js_box2dclasses_b2RopeJoint_GetAnchorA);
SE_DECLARE_FUNC(js_box2dclasses_b2RopeJoint_GetReactionTorque);
SE_DECLARE_FUNC(js_box2dclasses_b2RopeJoint_GetMaxLength);
SE_DECLARE_FUNC(js_box2dclasses_b2RopeJoint_GetLocalAnchorA);
SE_DECLARE_FUNC(js_box2dclasses_b2RopeJoint_Dump);
SE_DECLARE_FUNC(js_box2dclasses_b2RopeJoint_SetMaxLength);
SE_DECLARE_FUNC(js_box2dclasses_b2RopeJoint_GetLocalAnchorB);
SE_DECLARE_FUNC(js_box2dclasses_b2RopeJoint_GetAnchorB);
SE_DECLARE_FUNC(js_box2dclasses_b2RopeJoint_GetReactionForce);
SE_DECLARE_FUNC(js_box2dclasses_b2RopeJoint_GetLimitState);

extern se::Object* __jsb_b2WeldJoint_proto;
extern se::Class* __jsb_b2WeldJoint_class;

bool js_register_b2WeldJoint(se::Object* obj);
bool register_all_box2dclasses(se::Object* obj);
SE_DECLARE_FUNC(js_box2dclasses_b2WeldJoint_SetDampingRatio);
SE_DECLARE_FUNC(js_box2dclasses_b2WeldJoint_GetAnchorA);
SE_DECLARE_FUNC(js_box2dclasses_b2WeldJoint_GetReactionTorque);
SE_DECLARE_FUNC(js_box2dclasses_b2WeldJoint_Dump);
SE_DECLARE_FUNC(js_box2dclasses_b2WeldJoint_SetFrequency);
SE_DECLARE_FUNC(js_box2dclasses_b2WeldJoint_GetDampingRatio);
SE_DECLARE_FUNC(js_box2dclasses_b2WeldJoint_GetFrequency);
SE_DECLARE_FUNC(js_box2dclasses_b2WeldJoint_GetLocalAnchorA);
SE_DECLARE_FUNC(js_box2dclasses_b2WeldJoint_GetLocalAnchorB);
SE_DECLARE_FUNC(js_box2dclasses_b2WeldJoint_GetAnchorB);
SE_DECLARE_FUNC(js_box2dclasses_b2WeldJoint_GetReactionForce);
SE_DECLARE_FUNC(js_box2dclasses_b2WeldJoint_GetReferenceAngle);

extern se::Object* __jsb_b2WheelJoint_proto;
extern se::Class* __jsb_b2WheelJoint_class;

bool js_register_b2WheelJoint(se::Object* obj);
bool register_all_box2dclasses(se::Object* obj);
SE_DECLARE_FUNC(js_box2dclasses_b2WheelJoint_IsMotorEnabled);
SE_DECLARE_FUNC(js_box2dclasses_b2WheelJoint_GetMotorSpeed);
SE_DECLARE_FUNC(js_box2dclasses_b2WheelJoint_GetAnchorA);
SE_DECLARE_FUNC(js_box2dclasses_b2WheelJoint_GetReactionTorque);
SE_DECLARE_FUNC(js_box2dclasses_b2WheelJoint_Dump);
SE_DECLARE_FUNC(js_box2dclasses_b2WheelJoint_SetSpringDampingRatio);
SE_DECLARE_FUNC(js_box2dclasses_b2WheelJoint_GetSpringFrequencyHz);
SE_DECLARE_FUNC(js_box2dclasses_b2WheelJoint_GetJointTranslation);
SE_DECLARE_FUNC(js_box2dclasses_b2WheelJoint_GetSpringDampingRatio);
SE_DECLARE_FUNC(js_box2dclasses_b2WheelJoint_GetLocalAxisA);
SE_DECLARE_FUNC(js_box2dclasses_b2WheelJoint_SetSpringFrequencyHz);
SE_DECLARE_FUNC(js_box2dclasses_b2WheelJoint_GetLocalAnchorA);
SE_DECLARE_FUNC(js_box2dclasses_b2WheelJoint_SetMotorSpeed);
SE_DECLARE_FUNC(js_box2dclasses_b2WheelJoint_GetLocalAnchorB);
SE_DECLARE_FUNC(js_box2dclasses_b2WheelJoint_SetMaxMotorTorque);
SE_DECLARE_FUNC(js_box2dclasses_b2WheelJoint_GetAnchorB);
SE_DECLARE_FUNC(js_box2dclasses_b2WheelJoint_GetReactionForce);
SE_DECLARE_FUNC(js_box2dclasses_b2WheelJoint_GetMotorTorque);
SE_DECLARE_FUNC(js_box2dclasses_b2WheelJoint_GetJointSpeed);
SE_DECLARE_FUNC(js_box2dclasses_b2WheelJoint_GetMaxMotorTorque);
SE_DECLARE_FUNC(js_box2dclasses_b2WheelJoint_EnableMotor);

